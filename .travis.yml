language: android
android:
  components:
    # The BuildTools version used by your project
    # - tools
    # - platform-tools
    # - tools
    - build-tools-25.0.3

    # The SDK version used to compile your project
    - android-25

    # Additional dependencies for emulator tests
    - extra-google-m2repository
    - extra-android-m2repository
    - sys-img-armeabi-v7a-google_apis-25

  licenses:
    - 'android-sdk-license-.+'
    - 'android-sdk-preview-license-.+'
    - 'google-gdk-license-.+'

before_install:
 # Install android tools
  - ANDROID_TOOLS=4333796 # android-28
  - export ANDROID_HOME=~/android-sdk
  - |
    if [ $TRAVIS_OS_NAME == "osx" ]; then
      wget -q "https://dl.google.com/android/repository/sdk-tools-darwin-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
    else
      wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
    fi
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
  # Silence warning.
  - mkdir -p ~/.android
  - touch ~/.android/repositories.cfg
  # install correct version of java on osx
  - |
    if [ $TRAVIS_OS_NAME == "osx" ]; then
      # skip brew update
      export HOMEBREW_NO_AUTO_UPDATE=1
      brew cask uninstall java; brew tap caskroom/versions; brew cask install java8;
    fi
  #- yes | sdkmanager --licenses
  - yes | sdkmanager "platforms;android-25"
  - yes | sdkmanager "build-tools;25.0.3"
  
   # Platform tools
  - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
  - sdkmanager --list | head -15
  
  # install older build tools (for emulator)
  - sdkmanager "build-tools;25.0.2" "platforms;android-25" > /dev/null
  
  # Create and start emulator
  - sdkmanager "system-images;android-22;armeabi-v7a" > /dev/null
  
  - sdkmanager --list | head -15
  - echo no | avdmanager create avd -n test -k "system-images;android-22;armeabi-v7a"
  
# Emulator Management: Create, Start and Wait
before_script:
  - android list targets 
  - echo no | android create avd --force -n test -t android-25 --abi armeabi-v7a --tag google_apis
  - emulator -avd test -no-window -engine classic -no-audio &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

script:
  - ./gradlew test
